{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","event","currentTarget","value","setState","prev","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","contactForm","type","placeholder","pattern","title","required","onChange","Component","Contact","id","onDeleteContact","onClick","ContactList","contacts","length","map","Filter","App","filter","addContact","data","newContact","uuidv4","editNumber","contact","toLowerCase","includes","alert","prevState","deleteContact","getVisibledContacts","normalizedFilter","changeFilter","e","JSON","parse","localStorage","getItem","setItem","stringify","string","slice","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9837a7e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-list\":\"ContactList_contact-list__25o_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-label\":\"ContactForm_contact-label__2xFmb\",\"contact-input\":\"ContactForm_contact-input__TxnZR\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    INITIAL_STATE: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label className={styles[\"contact-label\"]}>\r\n          Name\r\n          <input\r\n            className={styles[\"contact-input\"]}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Input name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles[\"contact-label\"]}>\r\n          Number\r\n          <input\r\n            className={styles[\"contact-input\"]}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"XXX-XX-XX\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Contact = ({ id, name, number, onDeleteContact }) => (\r\n  <li name={name} number={number}>\r\n    {name}:<span>{number}</span>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onDeleteContact(id);\r\n      }}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      {contacts.length ? (\r\n        <ul className={styles[\"contact-list\"]}>\r\n          {contacts.map(({ id, name, number }) => {\r\n            return (\r\n              <Contact\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n                onDeleteContact={onDeleteContact}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p>Nothing to see here</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles[\"filter\"]}>\r\n      <label className={styles[\"filter-label\"]}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className={styles[\"filter-input\"]}\r\n          value={value}\r\n          placeholder=\"Input name\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      /* { id: \"id-1\", name: \"Dmytro Iarkovenko\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Alexander Venik\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Viktoriia Shynkar\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Alexander Repeta\", number: \"227-91-26\" }, */\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (JSON.parse(localStorage.getItem(\"contacts\"))) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = data => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name: data.name,\n      number: this.editNumber(data.number),\n    };\n    contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(data.name.toLowerCase())\n      ? alert(`${data.name} is already in contacts.`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, newContact],\n        }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  getVisibledContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  editNumber(string) {\n    return (\n      string.slice(0, 3) + \"-\" + string.slice(3, 5) + \"-\" + string.slice(5, 7)\n    );\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibledContacts();\n    return (\n      <div className=\"App\">\n        <section>\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n        </section>\n        <section>\n          <h2 className=\"title\">Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.module.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2-nGe\",\"filter-label\":\"Filter_filter-label__ooQ2c\",\"filter-input\":\"Filter_filter-input__2j2Ix\"};"],"sourceRoot":""}